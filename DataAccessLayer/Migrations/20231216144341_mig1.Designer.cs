// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231216144341_mig1")]
    partial class mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EntityLayer.Entities.Adisyon", b =>
                {
                    b.Property<int>("Adisyon_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Adisyon_Id"), 1L, 1);

                    b.Property<int?>("Adet")
                        .HasColumnType("int");

                    b.Property<int?>("Servis_Id")
                        .HasColumnType("int");

                    b.Property<int>("Siparis_Id")
                        .HasColumnType("int");

                    b.HasKey("Adisyon_Id");

                    b.HasIndex("Servis_Id");

                    b.HasIndex("Siparis_Id");

                    b.ToTable("Adisyons");
                });

            modelBuilder.Entity("EntityLayer.Entities.Kategoriler", b =>
                {
                    b.Property<int>("Kategori_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Kategori_Id"), 1L, 1);

                    b.Property<string>("Kategori_Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Kategori_Id");

                    b.ToTable("Kategorilers");
                });

            modelBuilder.Entity("EntityLayer.Entities.Masalar", b =>
                {
                    b.Property<int>("Masa_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Masa_Id"), 1L, 1);

                    b.Property<string>("Masa_Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Masa_Durum")
                        .HasColumnType("bit");

                    b.HasKey("Masa_Id");

                    b.ToTable("Masalars");
                });

            modelBuilder.Entity("EntityLayer.Entities.Personeller", b =>
                {
                    b.Property<int>("Personel_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Personel_Id"), 1L, 1);

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Masa_Id")
                        .HasColumnType("int");

                    b.Property<int>("Rol_Id")
                        .HasColumnType("int");

                    b.HasKey("Personel_Id");

                    b.HasIndex("Masa_Id");

                    b.HasIndex("Rol_Id");

                    b.ToTable("Personellers");
                });

            modelBuilder.Entity("EntityLayer.Entities.Roller", b =>
                {
                    b.Property<int>("Rol_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Rol_Id"), 1L, 1);

                    b.Property<string>("Rol_Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Rol_Id");

                    b.ToTable("Rollers");
                });

            modelBuilder.Entity("EntityLayer.Entities.Servisler", b =>
                {
                    b.Property<int>("Servis_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Servis_Id"), 1L, 1);

                    b.Property<double?>("Fiyat")
                        .HasColumnType("float");

                    b.Property<int>("Kategori_Id")
                        .HasColumnType("int");

                    b.Property<string>("Servis_Ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Servis_Image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Servis_Id");

                    b.HasIndex("Kategori_Id");

                    b.ToTable("Servislers");
                });

            modelBuilder.Entity("EntityLayer.Entities.Siparisler", b =>
                {
                    b.Property<int>("Siparis_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Siparis_Id"), 1L, 1);

                    b.Property<DateTime>("Acilis")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Kapanis")
                        .HasColumnType("datetime2");

                    b.Property<int>("Masa_Id")
                        .HasColumnType("int");

                    b.HasKey("Siparis_Id");

                    b.HasIndex("Masa_Id");

                    b.ToTable("Siparislers");
                });

            modelBuilder.Entity("EntityLayer.Entities.Adisyon", b =>
                {
                    b.HasOne("EntityLayer.Entities.Servisler", "Servisler")
                        .WithMany("Adisyons")
                        .HasForeignKey("Servis_Id");

                    b.HasOne("EntityLayer.Entities.Siparisler", "Siparisler")
                        .WithMany("Adisyons")
                        .HasForeignKey("Siparis_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Servisler");

                    b.Navigation("Siparisler");
                });

            modelBuilder.Entity("EntityLayer.Entities.Personeller", b =>
                {
                    b.HasOne("EntityLayer.Entities.Masalar", "Masalar")
                        .WithMany("Personellers")
                        .HasForeignKey("Masa_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Entities.Roller", "Roller")
                        .WithMany("Personellers")
                        .HasForeignKey("Rol_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Masalar");

                    b.Navigation("Roller");
                });

            modelBuilder.Entity("EntityLayer.Entities.Servisler", b =>
                {
                    b.HasOne("EntityLayer.Entities.Kategoriler", "Kategoriler")
                        .WithMany("Servislers")
                        .HasForeignKey("Kategori_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategoriler");
                });

            modelBuilder.Entity("EntityLayer.Entities.Siparisler", b =>
                {
                    b.HasOne("EntityLayer.Entities.Masalar", "Masalar")
                        .WithMany()
                        .HasForeignKey("Masa_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Masalar");
                });

            modelBuilder.Entity("EntityLayer.Entities.Kategoriler", b =>
                {
                    b.Navigation("Servislers");
                });

            modelBuilder.Entity("EntityLayer.Entities.Masalar", b =>
                {
                    b.Navigation("Personellers");
                });

            modelBuilder.Entity("EntityLayer.Entities.Roller", b =>
                {
                    b.Navigation("Personellers");
                });

            modelBuilder.Entity("EntityLayer.Entities.Servisler", b =>
                {
                    b.Navigation("Adisyons");
                });

            modelBuilder.Entity("EntityLayer.Entities.Siparisler", b =>
                {
                    b.Navigation("Adisyons");
                });
#pragma warning restore 612, 618
        }
    }
}
